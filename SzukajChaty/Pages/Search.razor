@page "/"
@page "/search"
@using SzukajChaty.Components
@inject HttpClient Http

<h3>Wyszukiwarka nieruchomości</h3>

<FilterPanel
    @bind-City="_city"
    @bind-Type="_type"
    @bind-PriceMin="_priceMin"
    @bind-PriceMax="_priceMax"
    OnSearch="SearchAsync" />

<PortalSelector 
    Portals="_allPortals" 
    SelectedPortals="_selectedPortals" 
    OnToggle="HandlePortalToggle" />

<ResultList Listings="_listings" />


@code {
    private string _city = "";
    private string _type = "";
    private decimal? _priceMin;
    private decimal? _priceMax;

    private List<Listing>? _listings;
    private readonly List<string> _allPortals = new() { "Otodom", "OLX", "Nieruchomosci-Online" };
    private readonly List<string> _selectedPortals = new();

    void HandlePortalToggle((string Portal, string? Value) data)
    {
        var (portal, value) = data;

        if (bool.TryParse(value, out var isChecked) && isChecked)
        {
            if (!_selectedPortals.Contains(portal))
                _selectedPortals.Add(portal);
        }
        else
        {
            _selectedPortals.Remove(portal);
        }
    }


    async Task SearchAsync()
    {
        var query = $"city={Uri.EscapeDataString(_city)}&type={_type}&priceMin={_priceMin}&priceMax={_priceMax}";
        foreach (var portal in _selectedPortals)
        {
            query += $"&portals={Uri.EscapeDataString(portal)}";
        }
        var url = $"http://localhost:5028/api/search?{query}";


        try
        {
            _listings = await Http.GetFromJsonAsync<List<Listing>>(url);
        }
        catch (Exception ex)
        {
            Console.WriteLine("Błąd przy pobieraniu danych: " + ex.Message);
            _listings = new();
        }
    }

    public class Listing
    {
        public string? Title { get; set; }
        public string? Url { get; set; }
        public string? ImageUrl { get; set; }
        public DateTime PublishedAt { get; set; }
        public decimal Price { get; set; }
        public string? Location { get; set; }
        public string? Source { get; set; }
    }
}
